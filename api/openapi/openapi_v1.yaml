components:
  schemas:
    Attempt:
      description: Attempt
      properties:
        created_at:
          description: The timestamp of when the attempt was created.
          title: Created At
          type: integer
        errors:
          description: The errors of the attempt.
          items:
            $ref: '#/components/schemas/Error'
          title: Errors
          type: array
        index:
          description: The index of the attempt.
          title: Index
          type: integer
        outputs:
          description: The outputs of the attempt.
          items:
            $ref: '#/components/schemas/Output'
          title: Outputs
          type: array
      title: Attempt
      type: object
    Error:
      description: Error
      properties:
        created_at:
          description: The timestamp of when the error was created.
          title: Created At
          type: integer
        index:
          description: The index of the error.
          title: Index
          type: integer
        type:
          description: The type of the error.
          title: Type
          type: string
        value:
          description: The value of the error.
          title: Value
          type: string
      title: Error
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    Message:
      description: The message based on which the response will be generated.
      properties:
        content:
          description: The content of the message.
          title: Content
          type: string
        created_at:
          description: The timestamp of when the message was created.
          title: Created At
          type: integer
        id:
          description: The ID of the message.
          title: Id
          type: string
        role:
          $ref: '#/components/schemas/Role'
      title: Message
      type: object
    Output:
      description: Output
      properties:
        created_at:
          description: The timestamp of when the output was created.
          title: Created At
          type: integer
        description:
          description: The description of the output.
          title: Description
          type: string
        index:
          description: The index of the output.
          title: Index
          type: integer
        type:
          description: The type of the output.
          title: Type
          type: string
        value:
          description: The value of the output.
          title: Value
          type: string
      title: Output
      type: object
    OutputType:
      description: The output type of the response.
      enum:
      - any
      - int
      - float
      - string
      - bool
      - plotly_chart
      - pandas_dataframe
      - sql_query
      - python_code
      - python_output
      title: OutputType
      type: string
    Request:
      description: Request
      properties:
        data_source_url:
          default: ''
          description: The data source URL based on which the response will be generated.
            The entity is optional. If not specified, the default data source will
            be used.
          title: Data Source Url
          type: string
        max_attempts:
          default: 10
          description: The maximum number of attempts to generate an output.
          title: Max Attempts
          type: integer
        max_outputs:
          default: 10
          description: The maximum number of outputs to generate.
          title: Max Outputs
          type: integer
        max_tokens:
          default: 10
          description: The maximum number of tokens to use for generating an output.
          title: Max Tokens
          type: integer
        messages:
          description: The messages based on which the response will be generated.
          items:
            $ref: '#/components/schemas/Message'
          title: Messages
          type: array
        output_type:
          $ref: '#/components/schemas/OutputType'
        session_id:
          description: The session ID of the request.
          title: Session Id
          type: string
      title: Request
      type: object
    Response:
      description: Response
      properties:
        attempts:
          description: The attempts of the request.
          items:
            $ref: '#/components/schemas/Attempt'
          title: Attempts
          type: array
        created_at:
          description: The timestamp of when the request was created.
          title: Created At
          type: integer
        data_source_url:
          description: The data source URL of the request.
          title: Data Source Url
          type: string
        errors:
          description: The errors of the request.
          items:
            $ref: '#/components/schemas/Error'
          title: Errors
          type: array
        finished_at:
          description: The timestamp of when the request was finished.
          title: Finished At
          type: integer
        messages:
          description: The messages of the request.
          items:
            $ref: '#/components/schemas/Message'
          title: Messages
          type: array
        output_type:
          $ref: '#/components/schemas/OutputType'
        outputs:
          description: The outputs of the request.
          items:
            $ref: '#/components/schemas/Output'
          title: Outputs
          type: array
        session_id:
          description: The session ID of the response.
          title: Session Id
          type: string
        status:
          $ref: '#/components/schemas/Status'
        usage:
          $ref: '#/components/schemas/ResponseUsage'
      title: Response
      type: object
    ResponseUsage:
      description: The usage of the request.
      properties:
        tokens:
          description: The number of tokens used for the request.
          title: Tokens
          type: integer
      title: ResponseUsage
      type: object
    Role:
      description: The role of the message.
      enum:
      - system
      - user
      - assistant
      - function
      title: Role
      type: string
    Status:
      description: The status of the request.
      enum:
      - succeeded
      - failed
      - stream
      title: Status
      type: string
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
  securitySchemes:
    APIKeyHeader:
      in: header
      name: X-API-KEY
      type: apiKey
info:
  description: The ChartGPT API is a REST API that generates insights from data based
    on natural language questions.
  title: ChartGPT API
  version: 0.1.0
openapi: 3.1.0
paths:
  /health:
    get:
      description: Ping the API to check if it is running.
      operationId: ping_health_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Ping
      tags:
      - health
  /v1/ask_chartgpt:
    post:
      description: Answer a user query using the ChartGPT API.
      operationId: ask_chartgpt_v1_ask_chartgpt_post
      parameters:
      - in: query
        name: stream
        required: false
        schema:
          default: false
          title: Stream
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyHeader: []
      summary: Ask Chartgpt
      tags:
      - chat
  /v1/ask_chartgpt/stream:
    post:
      description: Stream the response from the ChartGPT API.
      operationId: ask_chartgpt_stream_v1_ask_chartgpt_stream_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - APIKeyHeader: []
      summary: Ask Chartgpt Stream
      tags:
      - chat
